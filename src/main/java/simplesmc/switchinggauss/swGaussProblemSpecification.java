package simplesmc.switchinggauss;import java.util.List;import java.util.Random;import org.apache.commons.lang3.tuple.Pair;import simplesmc.ProblemSpecification;public class swGaussProblemSpecification implements ProblemSpecification<Pair<Integer, Double>> {		private final swGaussParams parameters;	private final List<Double> observations;	public swGaussProblemSpecification(swGaussParams parameters, List<Double> observations) {		this.parameters = parameters;		this.observations = observations;	}	@Override	public Pair<Double, Pair<Integer, Double>> proposeNext(			int currentSmcIteration, Random random, Pair<Integer, Double> currentParticle) {		Pair<Integer, Double> proposedParticle = this.parameters.sampleTransition(random, currentParticle);		double weightUpdate = this.parameters.emissionLogPr(proposedParticle, observations.get(currentSmcIteration));		return Pair.of(weightUpdate, proposedParticle);	}	@Override	public Pair<Double, Pair<Integer, Double>> proposeInitial(Random random) {		Pair<Integer, Double> particle = this.parameters.sampleInitial(random);		Double weight = this.parameters.emissionLogPr(particle, observations.get(0));		return Pair.of(weight, particle); 	}	@Override	public int nIterations() {		return this.observations.size();	}	}